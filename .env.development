# ==============================================================================
# PRODUCTION ENVIRONMENT CONFIGURATION FOR cPANEL
# ==============================================================================
# This is a TEMPLATE for your production .env file
# Review and modify all values marked with [CHANGE THIS] before using
# After reviewing, copy this to .env on your cPanel server
# ==============================================================================

# ------------------------------------------------------------------------------
# APPLICATION SETTINGS
# ------------------------------------------------------------------------------
APP_NAME="Box Industries"
APP_ENV=development
APP_KEY=              # [CHANGE THIS] Generate using: php artisan key:generate
APP_DEBUG=trye        # CRITICAL: Must be false in production for security
APP_TIMEZONE=UTC
APP_URL=https://yourdomain.com  # [CHANGE THIS] Your actual domain

APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database

# ------------------------------------------------------------------------------
# PHP CONFIGURATION
# ------------------------------------------------------------------------------
# cPanel typically uses PHP 8.1, 8.2, or 8.3
# You'll need to set this in cPanel's "Select PHP Version" interface
# This project requires PHP ^8.2



# ------------------------------------------------------------------------------
# DATABASE CONFIGURATION
# ------------------------------------------------------------------------------
# cPanel typically provides MySQL 5.7+ or MariaDB
# You'll get these credentials from cPanel's MySQL Databases section

DB_CONNECTION=mysql
DB_HOST=localhost          # [CHANGE THIS] Usually 'localhost' or your server's hostname
DB_PORT=3306
DB_DATABASE=your_cpanel_username_dbname  # [CHANGE THIS] e.g., username_boxindustries
DB_USERNAME=your_cpanel_username         # [CHANGE THIS] e.g., username_dbuser
DB_PASSWORD=                             # [CHANGE THIS] Strong password from cPanel
DB_CHARSET=utf8mb4
DB_COLLATION=utf8mb4_unicode_ci

# ------------------------------------------------------------------------------
# SESSION & CACHE CONFIGURATION
# ------------------------------------------------------------------------------
# For cPanel, 'file' or 'database' drivers work best
# Avoid 'redis' unless you have Redis installed (uncommon on shared hosting)

SESSION_DRIVER=database
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=null
SESSION_SECURE_COOKIE=true  # CRITICAL: true for HTTPS (recommended)
SESSION_SAME_SITE=lax

CACHE_STORE=file
CACHE_PREFIX=

# ------------------------------------------------------------------------------
# QUEUE CONFIGURATION
# ------------------------------------------------------------------------------
# For cPanel, use 'database' driver
# You'll need to set up a cron job to run: php artisan queue:work --daemon

QUEUE_CONNECTION=database
QUEUE_FAILED_DRIVER=database

# ------------------------------------------------------------------------------
# MAIL CONFIGURATION
# ------------------------------------------------------------------------------
# Configure based on your cPanel email settings or external service

MAIL_MAILER=smtp
MAIL_HOST=mail.yourdomain.com        # [CHANGE THIS] Your cPanel mail server
MAIL_PORT=587                         # Usually 587 for TLS or 465 for SSL
MAIL_USERNAME=noreply@yourdomain.com # [CHANGE THIS] Your email address
MAIL_PASSWORD=                        # [CHANGE THIS] Email password
MAIL_ENCRYPTION=tls                   # tls or ssl
MAIL_FROM_ADDRESS=noreply@yourdomain.com  # [CHANGE THIS]
MAIL_FROM_NAME="${APP_NAME}"

# ------------------------------------------------------------------------------
# LOGGING
# ------------------------------------------------------------------------------
# For cPanel, use 'daily' to prevent log files from growing too large

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=warning  # Use 'warning' or 'error' in production, not 'debug'

# ------------------------------------------------------------------------------
# BROADCASTING (Optional - likely not needed on cPanel)
# ------------------------------------------------------------------------------
BROADCAST_CONNECTION=log

# ------------------------------------------------------------------------------
# FILESYSTEM
# ------------------------------------------------------------------------------
# 'public' disk is fine for most cPanel deployments

FILESYSTEM_DISK=public

# ------------------------------------------------------------------------------
# VITE/ASSET CONFIGURATION
# ------------------------------------------------------------------------------
# Important: Assets must be built BEFORE deployment
# Run 'npm run build' locally before deploying

VITE_APP_NAME="${APP_NAME}"

# ------------------------------------------------------------------------------
# INERTIA CONFIGURATION
# ------------------------------------------------------------------------------
# Inertia SSR is typically not available on shared cPanel hosting
# Keep this disabled unless you have a VPS or dedicated server

INERTIA_SSR_ENABLED=false

# ------------------------------------------------------------------------------
# SECURITY & MISCELLANEOUS
# ------------------------------------------------------------------------------
# These enhance security in production

BCRYPT_ROUNDS=12

# ------------------------------------------------------------------------------
# EXTERNAL SERVICES (Add as needed)
# ------------------------------------------------------------------------------
# Add any API keys or external service credentials here
# Examples:

# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_DEFAULT_REGION=us-east-1
# AWS_BUCKET=
# AWS_USE_PATH_STYLE_ENDPOINT=false

# PUSHER_APP_ID=
# PUSHER_APP_KEY=
# PUSHER_APP_SECRET=
# PUSHER_HOST=
# PUSHER_PORT=443
# PUSHER_SCHEME=https
# PUSHER_APP_CLUSTER=mt1

# ==============================================================================
# IMPORTANT NOTES:
# ==============================================================================
# 1. NEVER commit the actual .env file to Git
# 2. Always use HTTPS in production (set APP_URL with https://)
# 3. Generate a new APP_KEY on the server: php artisan key:generate
# 4. Set APP_DEBUG=false in production
# 5. Use strong database passwords
# 6. Configure proper file permissions (644 for .env)
# 7. Enable HTTPS and set SESSION_SECURE_COOKIE=true
# ==============================================================================
